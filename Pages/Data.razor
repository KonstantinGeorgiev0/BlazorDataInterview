@page "/data"
@using ItilityInterview.Models
@using System.Globalization
@inject HttpClient Http

<PageTitle>IPC</PageTitle>

<h1>Data Analysis on Industrial PC Underutilization</h1>

@if (listOfIpcData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>All IPC Data</h4>
    <table class="table">
        <thead>
            <tr>
                <th>IPC</th>
                <th>Factory</th>
                <th>Date</th>
                <th>AvgValue</th>
                <th>MinValue</th>
                <th>MaxValue</th>
                <th>Metric ID</th>
                <th>CpuMHz</th>
                @* <th>Avg Utilization (%)</th>
                <th>Peak Utilization (%)</th> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in listOfIpcData)
            {
                <tr>
                    <td>@item.IPC</td>
                    <td>@item.DataFactory</td>
                    <td>@item.Time.ToShortDateString()</td>
                    <td>@item.AvgValue</td>
                    <td>@item.MinValue</td>
                    <td>@item.MaxValue</td>
                    <td>@item.MetricID</td>
                    <td>@item.CpuMHz</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<IPCData> listOfIpcData = new List<IPCData>();

    protected override async Task OnInitializedAsync()
    {
        string csvIpcData = await Http.GetStringAsync("sample-data/IPC_data_copy.csv");
        List<string> dataRows = csvIpcData.Split("\n").ToList();

        for (int i = 0; i < dataRows.Count; i++)
        {
            if (i > 0)
            {
                List<string> ipcStringList = dataRows[i].Split(";").ToList();
                 
                IPCData IpcData = new IPCData(
                    ipcStringList[0],
                    Int32.Parse(ipcStringList[1]),
                    DateTime.Parse(ipcStringList[2]),
                    double.Parse(ipcStringList[3].Replace(',', '.')),
                    double.Parse(ipcStringList[4].Replace(',', '.')),
                    double.Parse(ipcStringList[5].Replace(',', '.')),
                    ipcStringList[6],
                    Int32.Parse(ipcStringList[7])
                );
                listOfIpcData.Add(IpcData);
            }
        }
    }
}    
